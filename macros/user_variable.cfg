[gcode_macro DISPLAY_FEATURES]
description: Show all features and their enabled states
gcode:
  {% set auto_z_offset = printer['gcode_macro _USER_VARIABLE'].auto_z_offset|lower %}
  {% set bed_mesh = printer['gcode_macro _USER_VARIABLE'].bed_mesh|lower %}
  {% set beeper = printer.save_variables.variables.beeper|default("false")|lower %}
  {% set case_lights = printer['gcode_macro _USER_VARIABLE'].case_lights|lower %}
  {% set chamber_sensor = printer['gcode_macro _USER_VARIABLE'].chamber_sensor|lower %}
  {% set debug = printer.save_variables.variables.debug|default("false")|lower %}
  {% set display_lights = printer['gcode_macro _USER_VARIABLE'].display_lights|lower %}
  {% set exhaust_fan = printer['gcode_macro _USER_VARIABLE'].exhaust_fan|lower %}
  {% set frame_sensor = printer['gcode_macro _USER_VARIABLE'].frame_sensor|lower %}
  {% set nevermore_fan = printer['gcode_macro _USER_VARIABLE'].nevermore_fan|lower %}
  {% set nozzle_clean = printer.save_variables.variables.nozzle_clean|default("false")|lower %}
  {% set nozzle_purge = printer.save_variables.variables.nozzle_purge|default("false")|lower %}
  {% set print_end_routine = printer.save_variables.variables.print_end_routine|default("cooldown")|lower %}
  {% set probe_type = printer['gcode_macro _USER_VARIABLE'].probe_type|lower %}
  {% set quad_gantry_level = printer['gcode_macro _USER_VARIABLE'].quad_gantry_level|lower %}

  {action_respond_info('==== DISPLAY_FEATURES ====')}
  {action_respond_info("auto_z_offset: %s" % (auto_z_offset))}
  {action_respond_info("bed_mesh: %s" % (bed_mesh))}
  {action_respond_info("beeper: %s" % (beeper))}
  {action_respond_info("case_lights: %s" % (case_lights))}
  {action_respond_info("chamber_sensor: %s" % (chamber_sensor))}
  {action_respond_info("debug: %s" % (debug))}
  {action_respond_info("display_lights: %s" % (display_lights))}
  {action_respond_info("exhaust_fan: %s" % (exhaust_fan))}
  {action_respond_info("frame_sensor: %s" % (frame_sensor))}
  {action_respond_info("nevermore_fan: %s" % (nevermore_fan))}
  {action_respond_info("nozzle_clean: %s" % (nozzle_clean))}
  {action_respond_info("nozzle_purge: %s" % (nozzle_purge))}
  {action_respond_info("print_end_routine: %s" % (print_end_routine))}
  {action_respond_info("probe_type: %s" % (probe_type))}
  {action_respond_info("quad_gantry_level: %s" % (quad_gantry_level))}
  {action_respond_info('===============')}

[gcode_macro TOGGLE_DEBUG]
description: Toggle the printer beeper on and off.
gcode:
	{% set ena_debug = printer.save_variables.variables.debug|lower %}

	{% if ena_debug == "true" %}
		{action_respond_info('==== TOGGLE_DEBUG ====')}
		{action_respond_info("ena_debug: %s" % (ena_debug))}
		{action_respond_info('===============')}
	{% endif %}

	{% if ena_debug == "false" %}
		{action_respond_info('debug is off, turning it on')}
		SAVE_VARIABLE VARIABLE=debug VALUE='"true"'
	{% else %}
		{action_respond_info('debug is on, turning it off')}
		SAVE_VARIABLE VARIABLE=debug VALUE='"false"'
	{% endif %}

[gcode_macro _USER_VARIABLE]
description: Helper: Contains User defined printer variables
##### Homing and general movement #####
# variable_z_endstop_x: 96.6         ; z Endstop x position insight right profile
# variable_z_endstop_y: 304.4         ; z Endstop y position
# variable_z_hop: 5                ; z hop for moves e.g homimg
variable_xy_home_current: 0.4         ; reduced homing current for x and y
variable_z_home_current: 0.3          ; reduced homing current for z
variable_home_accel: 1200             ; reduced ACCEL for homing
variable_bed_y_offset: 0          ; Endstop offset to bed max y
##### Park Position #####
variable_boarder_delta: 20        ; distance for x or y from the edge
variable_z_max_delta: 40          ; ensure to do not hit cam in front
variable_z_min_delta: 30          ; minimal z from bed
##### Filament #####
variable_extruder_min_add: 30     ; Temperature add to min Extruder temp
variable_load_distance : 40       ; load distance while load filament
variable_load_extrude : 50        ; extrude distance while load filament
variable_unload_distance : 95     ; unload distance while unload filament
variable_retract_end: 10          ; retract distance at PRINT_END or CANCEL_PRINT
variable_retract_pause: 1         ; retract/extrude distance while PAUSE or RESUME
##### Prime Line #####
# variable_prime_start_xy: [5,30]   ; x&y start coordinates of prime line
# variable_prime_dir: 'Y+'          ; direction of prime line (X+, X-, Y+, Y-)
# variable_prime_z: 0.24            ; z hight for prime line
# variable_prime_dist: 0.4          ; distance between line, move will allways positive
# variable_prime_lenght: 220        ; length of prime line
# variable_prime_seg: 11            ; segments in that the prime line is splitted
# variable_prime_extrude_per_seg: 2 ; amount of filament extruded per segment
##### Peripheral #####
# variable_filter_on: 1             ; filter on value
# variable_filter_use_time: 80      ; Nevermore change warning limit 
# variable_vent_on: 15              ; chamber fan on temperature                        
# variable_fan_run_after_print: 30  ; time in min to run filter and chamber exhaust after print finsih 
##### Calculated values #####
# variable_purge_x: 0               ; purge bucket x location
# variable_purge_y: 0               ; purge bucket y location
# variable_wipe_start_x: 0          ; x start pos of wipe move
# variable_wipe_end_x: 0            ; x end pos of wipe move
# variable_wipe_start_y: 0          ; y start pos of wipe move
# variable_wipe_end_y: 0            ; y end pos of wipe move      
# variable_wipe_offset_y: 0         ; y distance for single wipe move
variable_center_x: 0              ; center off bed
variable_center_y: 0              ; center off bed
variable_center_z: 0              ; center off bed
# variable_retract_cancel: 0        ; difference between END and PAUSE retraction
##### additional hardware
variable_display_lights: 'false'    ; true is neopixel display_lights found in cfg
variable_case_lights: 'false'       ; true is neopixel case_lights found in cfg
variable_exhaust_fan: 'false'       ; true is fan_generic exhaust_fan found in cfg
variable_nevermore_fan: 'false'     ; true is fan_generic nevermore_fan found in cfg
variable_chamber_sensor: 'false'    ; true is temperature_sensor chamber found in cfg
variable_frame_sensor: 'false'      ; true is temperature_sensor frame found in cfg
variable_probe_type: 'unknown'      ; unknown/dockable/static what type of probe found in cfg
variable_bed_mesh: 'false'          ; true is bed_mesh frame found in cfg
# variable_beeper: 'false'            ; true is output_pin beeper found in cfg
gcode:
    ##### get printer limits and position #####
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set min_x = printer.toolhead.axis_minimum.x|float %}
    ##### calc needed variables #####
    {% set x_center = max_x / 2 %}
    {% set y_center = (max_y - bed_y_offset) / 2 %}
    {% set z_center = max_z / 2 %}
#   {% set retract_c = retract_end - retract_pause %}
    ##### detect additional hardware #####

    {% if 'temperature_sensor chamber' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=chamber_sensor VALUE='"true"'
    {% endif %}
    {% if 'temperature_sensor frame' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=frame_sensor VALUE='"true"'
    {% endif %}

    {% if 'fan_generic exhaust_fan' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=exhaust_fan VALUE='"true"'
    {% endif %}
    {% if 'fan_generic nevermore_fan' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=nevermore_fan VALUE='"true"'
    {% endif %}

    {% if printer.bed_mesh is defined %}
        SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=bed_mesh VALUE='"true"'
    {% endif %}

    {% if printer.quad_gantry_level is defined %}
        SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=quad_gantry_level VALUE='"true"'
    {% endif %}

#   ##### store results #####
#   SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=purge_x VALUE={x_purge}
#   SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=purge_y VALUE={y_purge}
#   SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=wipe_start_x VALUE={x_wipe_start}
#   SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=wipe_end_x VALUE={x_wipe_end}
#   SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=wipe_start_y VALUE={y_wipe_start}
#   SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=wipe_end_y VALUE={y_wipe_end}
#   SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=wipe_offset_y VALUE={y_wipe_offset}
    SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=center_x VALUE={x_center}
    SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=center_y VALUE={y_center}
    SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=center_z VALUE={z_center}
#   SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=retract_cancel VALUE={retract_c}